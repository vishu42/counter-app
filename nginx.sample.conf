user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    server {
        listen ${PORT};
        server_name ${SERVER_NAME};

        root /var/www/;
        index index.html;

        # This sets up nginx to replace parts of our JS code with environment
        # variables injected into the container. This allows us to run the same
        # code in different environments.
        # The sub filter is used in CI to set up all the environment variables
        # configured in manifold.
        location ~* ^.+\.js$ {
            LOCATION_SUB_FILTER
            sub_filter_once off;
            sub_filter_types *;

            expires 1M;
            access_log on;
            add_header X-XSS-Protection "1; mode=block";
            add_header Cache-Control "public";
        }

        # Health check endpoint. This will be used by kubernetes to determine if the
        # container is ready/alive.
        location = /_healthz {
            return 200 'OK';
        }

        # Force all paths to load either itself (js files) or go through index.html.
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Dont cache index.html file
        location ~ \.html$ {
            add_header Cache-Control "private, no-cache, no-store, must-revalidate";
            add_header Expires "Sat, 01 Jan 2000 00:00:00 GMT";
            add_header Pragma no-cache;
        }

         # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }

        location ~* \.(?:css)$ {
          try_files $uri =404;
          expires 1M;
          access_log on;
          add_header X-XSS-Protection "1; mode=block";
          add_header Content-Security-Policy 'font-src "self" fonts.gstatic.com; script-src "self" <meta http-equiv="Content-Security-Policy" content="default-src "self"; img-src https://*; child-src "none";">; img-src "self"; style-src "self" fonts.googleapis.com; default-src "none"';
        }

        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }

        location /static/ {
            root /var/www;
        }

        # To allow POST on static pages
        error_page 405 =200 $uri;
    }
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}
